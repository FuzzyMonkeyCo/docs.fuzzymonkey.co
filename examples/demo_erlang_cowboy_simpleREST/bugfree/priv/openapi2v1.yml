basePath: /api/1
consumes:
  - application/json
info:
  description: sample REST-like CRUD app APIs
  license:
    name: MIT
  title: sample REST-like CRUD app
  version: '1'
parameters:
  ItemIDInPath:
    format: int64
    in: path
    name: id
    required: true
    type: integer
  NewItemInBody:
    in: body
    name: item
    required: true
    schema:
      $ref: '#/definitions/NewItem'
definitions:
  ErrorModel:
    properties:
      code:
        format: int32
        type: integer
      message:
        type: string
    required:
      - code
      - message
    type: object
  Item:
    allOf:
      - $ref: '#/definitions/NewItem'
      - properties:
          id:
            format: int64
            type: integer
        required:
          - id
    type: object
  NewItem:
    properties:
      name:
        type: string
      tag:
        type: string
    required:
      - name
    type: object
host: 'cakeci.vcap.me:6773'
paths:
  '/item/{id}':
    delete:
      description: Deletes a single item based on the ID supplied
      operationId: deleteItem
      parameters:
        - $ref: '#/parameters/ItemIDInPath'
      responses:
        '204':
          description: item deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      description: Returns an item based on a single ID
      operationId: readItem
      parameters:
        - $ref: '#/parameters/ItemIDInPath'
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      responses:
        '200':
          description: item response
          schema:
            $ref: '#/definitions/Item'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    patch:
      description: Updates an item in the store
      operationId: updateItem
      parameters:
        - $ref: '#/parameters/ItemIDInPath'
        - $ref: '#/parameters/NewItemInBody'
      produces:
        - application/json
      responses:
        '200':
          description: item response
          schema:
            $ref: '#/definitions/Item'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      description: Replaces an item in the store.
      operationId: replaceItem
      parameters:
        - $ref: '#/parameters/ItemIDInPath'
        - $ref: '#/parameters/NewItemInBody'
      produces:
        - application/json
      responses:
        '200':
          description: item response
          schema:
            $ref: '#/definitions/Item'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      description: Creates a new item
      operationId: createItem
      parameters:
        - $ref: '#/parameters/ItemIDInPath'
        - $ref: '#/parameters/NewItemInBody'
      produces:
        - application/json
      responses:
        '201':
          description: item response
          schema:
            $ref: '#/definitions/Item'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /items:
    delete:
      description: Deletes all items
      operationId: eraseItems
      responses:
        '204':
          description: items deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      description: List all items
      operationId: readItems
      parameters:
        - collectionFormat: csv
          description: tags to filter by
          in: query
          items:
            type: string
          name: tags
          required: false
          type: array
        - description: maximum number of results to return
          format: int32
          in: query
          name: limit
          required: false
          type: integer
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      responses:
        '200':
          description: item response
          schema:
            items:
              $ref: '#/definitions/Item'
            type: array
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      description: Stores a new item
      operationId: storeItem
      parameters:
        - $ref: '#/parameters/NewItemInBody'
      produces:
        - application/json
      responses:
        '201':
          description: item response
          schema:
            $ref: '#/definitions/Item'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
produces:
  - application/json
schemes:
  - http
swagger: '2.0'
